<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            text-align: center;
            background-color: #f4f4f4;
        }

        h1 {
            background-color: #333;
            color: white;
            padding: 20px 0;
            margin-bottom: 20px;
        }

        .cart-container {
            width: 80%;
            margin: 20px auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 15px;
            border-bottom: 1px solid #ddd;
            text-align: center;
        }

        .actions button {
            padding: 10px 15px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .actions button:hover {
            background-color: #c82333;
        }

        .finalize-button {
            margin-top: 20px;
            padding: 15px 30px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .finalize-button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <h1>Your Cart</h1>
    <div class="cart-container">
        <table>
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Stock</th>
                    <th>Quantity</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="cartItems">
                {{#each cart.products}}
                <tr data-product-id="{{this.product._id}}">
                    <td>{{this.product.title}}</td>
                    <td>{{this.product.stock}}</td>
                    <td>
                        <input type="number" value="{{this.quantity}}" min="1" max="{{this.product.stock}}" oninput="updateQuantity(this)">
                    </td>
                    <td class="actions">
                        <button onclick="removeFromCart('{{this.product._id}}')">Remove</button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
    <button class="finalize-button" onclick="finalizePurchase()">Finalize Purchase</button>

    <script>
        const cartItems = [];

        // Inicializar cartItems con los valores actuales del carrito
        document.querySelectorAll('#cartItems tr').forEach(row => {
            const productId = row.getAttribute('data-product-id');
            const quantity = parseInt(row.querySelector('input[type="number"]').value);
            cartItems.push({ productId, quantity });
        });

        function updateQuantity(inputElement) {
            const productId = inputElement.closest('tr').getAttribute('data-product-id');
            const quantity = parseInt(inputElement.value);
            const existingItem = cartItems.find(item => item.productId === productId);

            if (existingItem) {
                existingItem.quantity = quantity;
            } else {
                cartItems.push({ productId, quantity });
            }
        }

        function removeFromCart(productId) {
            const row = document.querySelector(`tr[data-product-id="${productId}"]`);
            if (row) {
                row.remove();
            }
            const index = cartItems.findIndex(item => item.productId === productId);
            if (index > -1) {
                cartItems.splice(index, 1);
            }
        }

        function finalizePurchase() {
            fetch(`/api/carts/{{cart.id}}/purchase`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ cartItems }) // Enviar las cantidades actualizadas al backend
            }).then(response => {
                if (response.ok) {
                    response.json().then(data => {
                        location.href = `/ticket/${data.ticket.id}`;
                    });
                } else {
                    alert('Failed to complete purchase');
                }
            });
        }
    </script>
</body>
</html>
